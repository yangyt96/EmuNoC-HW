
-------------------------------------------------------------------------------
-- Title      : Full Noc with packet injector
--              Automatically generated by full_noc_generator.py
-- Project    :
-------------------------------------------------------------------------------
-- File       : full_noc.vhd
-- Author     : Behnam Razi Perjikolaei  <raziperj@uni-bremen.de>
-- Company    :
-- Created    : 2019-06-17
-- Last update:
-- Platform   :
-- Standard   : VHDL'87
-------------------------------------------------------------------------------
-- Description:
-------------------------------------------------------------------------------
-- Copyright (c) 2019
-------------------------------------------------------------------------------
-- Revisions  :
-- Date        Version  Author  Description
-- 2019-05-29  1.0      behnam  Created
-------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use IEEE.math_real.all;
USE ieee.numeric_std.ALL;
use work.NOC_3D_PACKAGE.all;

entity full_noc is

port(
  clk, rst          : in  std_logic;
  local_rx          : in  flit_vector(4-1 downto 0);
  local_vc_write_rx : in  std_logic_vector(8-1 downto 0);
  local_incr_rx_vec : in  std_logic_vector(8-1 downto 0);
  local_tx          : out flit_vector(4-1 downto 0);
  local_vc_write_tx : out std_logic_vector(8-1 downto 0);
  local_incr_tx_vec : out std_logic_vector(8-1 downto 0)
  );
end entity full_noc;

architecture structural of full_noc is
  type flit_vector_array is array (0 to 0) of flit_vector(max_port_num-1 downto 0);
  type flit_vector_2D_array is array (0 to 1) of flit_vector_array;
  type flit_vector_3D_array is array (0 to 1) of flit_vector_2D_array;

  subtype incr_per_port is std_logic_vector(2-1 downto 0);
  type incr_per_router is array (max_port_num-1 downto 0) of incr_per_port;
  type incr_array is array (0 to 0) of incr_per_router;
  type incr_2D_array is array (0 to 1) of incr_array;
  type incr_3D_array is array (0 to 1) of incr_2D_array;


  signal inter_data_in      : flit_vector_3D_array;
  signal inter_data_out     : flit_vector_3D_array;
  signal inter_incr_in      : incr_3D_array;
  signal inter_incr_out     : incr_3D_array;
  signal inter_vc_write_in  : incr_3D_array;
  signal inter_vc_write_out : incr_3D_array;
  signal data_in000, data_out000: flit_vector(3-1 downto 0);
  signal vc_write_rx_vec000: std_logic_vector(6-1 downto 0);
  signal incr_rx_vec000:  std_logic_vector(6-1 downto 0);
  signal vc_write_tx_pl_vec000:  std_logic_vector(6-1 downto 0);
  signal incr_tx_pl_vec000: std_logic_vector(6-1 downto 0);
  signal data_in100, data_out100: flit_vector(3-1 downto 0);
  signal vc_write_rx_vec100: std_logic_vector(6-1 downto 0);
  signal incr_rx_vec100:  std_logic_vector(6-1 downto 0);
  signal vc_write_tx_pl_vec100:  std_logic_vector(6-1 downto 0);
  signal incr_tx_pl_vec100: std_logic_vector(6-1 downto 0);
  signal data_in010, data_out010: flit_vector(3-1 downto 0);
  signal vc_write_rx_vec010: std_logic_vector(6-1 downto 0);
  signal incr_rx_vec010:  std_logic_vector(6-1 downto 0);
  signal vc_write_tx_pl_vec010:  std_logic_vector(6-1 downto 0);
  signal incr_tx_pl_vec010: std_logic_vector(6-1 downto 0);
  signal data_in110, data_out110: flit_vector(3-1 downto 0);
  signal vc_write_rx_vec110: std_logic_vector(6-1 downto 0);
  signal incr_rx_vec110:  std_logic_vector(6-1 downto 0);
  signal vc_write_tx_pl_vec110:  std_logic_vector(6-1 downto 0);
  signal incr_tx_pl_vec110: std_logic_vector(6-1 downto 0);

        begin
        data_in000(0) <= inter_data_in(0)(0)(0)(0);
inter_data_out(0)(0)(0)(0) <= data_out000(0);
incr_rx_vec000(2-1 downto 0) <= inter_incr_in(0)(0)(0)(0)(2-1 downto 0);
inter_incr_out(0)(0)(0)(0)(2-1 downto 0) <= incr_tx_pl_vec000(2-1 downto 0);
vc_write_rx_vec000(2-1 downto 0) <= inter_vc_write_in(0)(0)(0)(0)(2-1 downto 0);
inter_vc_write_out(0)(0)(0)(0)(2-1 downto 0) <= vc_write_tx_pl_vec000(2-1 downto 0);
data_in000(1) <= inter_data_in(0)(0)(0)(1);
inter_data_out(0)(0)(0)(1) <= data_out000(1);
incr_rx_vec000(4-1 downto 2) <= inter_incr_in(0)(0)(0)(1)(2-1 downto 0);
inter_incr_out(0)(0)(0)(1)(2-1 downto 0) <= incr_tx_pl_vec000(4-1 downto 2);
vc_write_rx_vec000(4-1 downto 2) <= inter_vc_write_in(0)(0)(0)(1)(2-1 downto 0);
inter_vc_write_out(0)(0)(0)(1)(2-1 downto 0) <= vc_write_tx_pl_vec000(4-1 downto 2);

inter_data_in(0)(0)(0)(1) <= inter_data_out(0)(0+1)(0)(3);

inter_incr_in(0)(0)(0)(1) <= inter_incr_out(0)(0+1)(0)(3);

inter_vc_write_in(0)(0)(0)(1) <= inter_vc_write_out(0)(0+1)(0)(3);
data_in000(2) <= inter_data_in(0)(0)(0)(2);
inter_data_out(0)(0)(0)(2) <= data_out000(2);
incr_rx_vec000(6-1 downto 4) <= inter_incr_in(0)(0)(0)(2)(2-1 downto 0);
inter_incr_out(0)(0)(0)(2)(2-1 downto 0) <= incr_tx_pl_vec000(6-1 downto 4);
vc_write_rx_vec000(6-1 downto 4) <= inter_vc_write_in(0)(0)(0)(2)(2-1 downto 0);
inter_vc_write_out(0)(0)(0)(2)(2-1 downto 0) <= vc_write_tx_pl_vec000(6-1 downto 4);

inter_data_in(0)(0)(0)(2) <= inter_data_out(0+1)(0)(0)(4);

inter_incr_in(0)(0)(0)(2) <= inter_incr_out(0+1)(0)(0)(4);

inter_vc_write_in(0)(0)(0)(2) <= inter_vc_write_out(0+1)(0)(0)(4);

inter_data_in(0)(0)(0)(0) <= local_rx(0);
local_tx(0)	          <= inter_data_out(0)(0)(0)(0);

inter_incr_in(0)(0)(0)(0)(2-1 downto 0) <= local_incr_rx_vec(2-1 downto 0);
local_incr_tx_vec(2-1 downto 0) <= inter_incr_out(0)(0)(0)(0)(2-1 downto 0);

inter_vc_write_in(0)(0)(0)(0)(2-1 downto 0) <= local_vc_write_rx(2-1 downto 0);
local_vc_write_tx(2-1 downto 0) <= inter_vc_write_out(0)(0)(0)(0)(2-1 downto 0);

--------------------------------------------------------------------------
-- Router at x= 0 y=0 z=0
--------------------------------------------------------------------------
router_000: entity work.router_pl
  generic map (
	port_num 			=> 3,
	Xis	 			=> 0,
	Yis	 			=> 0,
	Zis	 			=> 0,
	header_incl_in_packet_length	=> true,
	port_exist			=> (0,1,2),
	vc_num_vec			=> (2, 2, 2),
	vc_num_out_vec			=> (2, 2, 2),
	vc_depth_array			=> ((2, 2), (2, 2), (2, 2)),
	vc_depth_out_array		=> ((2, 2), (2, 2), (2, 2)),
	rout_algo			=> "XYZ"
	)
  port map (
	clk 			=> clk,
	rst 			=> rst,
	data_rx	 		=> data_in000,
	vc_write_rx_vec		=> vc_write_rx_vec000,
	incr_rx_vec		=> incr_rx_vec000,
	data_tx_pl		=> data_out000,
	vc_write_tx_pl_vec	=> vc_write_tx_pl_vec000,
	incr_tx_pl_vec		=> incr_tx_pl_vec000
	);
--------------------------------------------------------------------------
-- Router port connections to adjacent routers
--------------------------------------------------------------------------
data_in100(0) <= inter_data_in(1)(0)(0)(0);
inter_data_out(1)(0)(0)(0) <= data_out100(0);
incr_rx_vec100(2-1 downto 0) <= inter_incr_in(1)(0)(0)(0)(2-1 downto 0);
inter_incr_out(1)(0)(0)(0)(2-1 downto 0) <= incr_tx_pl_vec100(2-1 downto 0);
vc_write_rx_vec100(2-1 downto 0) <= inter_vc_write_in(1)(0)(0)(0)(2-1 downto 0);
inter_vc_write_out(1)(0)(0)(0)(2-1 downto 0) <= vc_write_tx_pl_vec100(2-1 downto 0);
data_in100(1) <= inter_data_in(1)(0)(0)(1);
inter_data_out(1)(0)(0)(1) <= data_out100(1);
incr_rx_vec100(4-1 downto 2) <= inter_incr_in(1)(0)(0)(1)(2-1 downto 0);
inter_incr_out(1)(0)(0)(1)(2-1 downto 0) <= incr_tx_pl_vec100(4-1 downto 2);
vc_write_rx_vec100(4-1 downto 2) <= inter_vc_write_in(1)(0)(0)(1)(2-1 downto 0);
inter_vc_write_out(1)(0)(0)(1)(2-1 downto 0) <= vc_write_tx_pl_vec100(4-1 downto 2);

inter_data_in(1)(0)(0)(1) <= inter_data_out(1)(0+1)(0)(3);

inter_incr_in(1)(0)(0)(1) <= inter_incr_out(1)(0+1)(0)(3);

inter_vc_write_in(1)(0)(0)(1) <= inter_vc_write_out(1)(0+1)(0)(3);
data_in100(2) <= inter_data_in(1)(0)(0)(4);
inter_data_out(1)(0)(0)(4) <= data_out100(2);
incr_rx_vec100(6-1 downto 4) <= inter_incr_in(1)(0)(0)(4)(2-1 downto 0);
inter_incr_out(1)(0)(0)(4)(2-1 downto 0) <= incr_tx_pl_vec100(6-1 downto 4);
vc_write_rx_vec100(6-1 downto 4) <= inter_vc_write_in(1)(0)(0)(4)(2-1 downto 0);
inter_vc_write_out(1)(0)(0)(4)(2-1 downto 0) <= vc_write_tx_pl_vec100(6-1 downto 4);

inter_data_in(1)(0)(0)(4) <= inter_data_out(1-1)(0)(0)(2);

inter_incr_in(1)(0)(0)(4) <= inter_incr_out(1-1)(0)(0)(2);

inter_vc_write_in(1)(0)(0)(4) <= inter_vc_write_out(1-1)(0)(0)(2);

inter_data_in(1)(0)(0)(0) <= local_rx(1);
local_tx(1)	          <= inter_data_out(1)(0)(0)(0);

inter_incr_in(1)(0)(0)(0)(2-1 downto 0) <= local_incr_rx_vec(4-1 downto 2);
local_incr_tx_vec(4-1 downto 2) <= inter_incr_out(1)(0)(0)(0)(2-1 downto 0);

inter_vc_write_in(1)(0)(0)(0)(2-1 downto 0) <= local_vc_write_rx(4-1 downto 2);
local_vc_write_tx(4-1 downto 2) <= inter_vc_write_out(1)(0)(0)(0)(2-1 downto 0);

--------------------------------------------------------------------------
-- Router at x= 1 y=0 z=0
--------------------------------------------------------------------------
router_100: entity work.router_pl
  generic map (
	port_num 			=> 3,
	Xis	 			=> 1,
	Yis	 			=> 0,
	Zis	 			=> 0,
	header_incl_in_packet_length	=> true,
	port_exist			=> (0,1,4),
	vc_num_vec			=> (2, 2, 2),
	vc_num_out_vec			=> (2, 2, 2),
	vc_depth_array			=> ((2, 2), (2, 2), (2, 2)),
	vc_depth_out_array		=> ((2, 2), (2, 2), (2, 2)),
	rout_algo			=> "XYZ"
	)
  port map (
	clk 			=> clk,
	rst 			=> rst,
	data_rx	 		=> data_in100,
	vc_write_rx_vec		=> vc_write_rx_vec100,
	incr_rx_vec		=> incr_rx_vec100,
	data_tx_pl		=> data_out100,
	vc_write_tx_pl_vec	=> vc_write_tx_pl_vec100,
	incr_tx_pl_vec		=> incr_tx_pl_vec100
	);
--------------------------------------------------------------------------
-- Router port connections to adjacent routers
--------------------------------------------------------------------------
data_in010(0) <= inter_data_in(0)(1)(0)(0);
inter_data_out(0)(1)(0)(0) <= data_out010(0);
incr_rx_vec010(2-1 downto 0) <= inter_incr_in(0)(1)(0)(0)(2-1 downto 0);
inter_incr_out(0)(1)(0)(0)(2-1 downto 0) <= incr_tx_pl_vec010(2-1 downto 0);
vc_write_rx_vec010(2-1 downto 0) <= inter_vc_write_in(0)(1)(0)(0)(2-1 downto 0);
inter_vc_write_out(0)(1)(0)(0)(2-1 downto 0) <= vc_write_tx_pl_vec010(2-1 downto 0);
data_in010(1) <= inter_data_in(0)(1)(0)(2);
inter_data_out(0)(1)(0)(2) <= data_out010(1);
incr_rx_vec010(4-1 downto 2) <= inter_incr_in(0)(1)(0)(2)(2-1 downto 0);
inter_incr_out(0)(1)(0)(2)(2-1 downto 0) <= incr_tx_pl_vec010(4-1 downto 2);
vc_write_rx_vec010(4-1 downto 2) <= inter_vc_write_in(0)(1)(0)(2)(2-1 downto 0);
inter_vc_write_out(0)(1)(0)(2)(2-1 downto 0) <= vc_write_tx_pl_vec010(4-1 downto 2);

inter_data_in(0)(1)(0)(2) <= inter_data_out(0+1)(1)(0)(4);

inter_incr_in(0)(1)(0)(2) <= inter_incr_out(0+1)(1)(0)(4);

inter_vc_write_in(0)(1)(0)(2) <= inter_vc_write_out(0+1)(1)(0)(4);
data_in010(2) <= inter_data_in(0)(1)(0)(3);
inter_data_out(0)(1)(0)(3) <= data_out010(2);
incr_rx_vec010(6-1 downto 4) <= inter_incr_in(0)(1)(0)(3)(2-1 downto 0);
inter_incr_out(0)(1)(0)(3)(2-1 downto 0) <= incr_tx_pl_vec010(6-1 downto 4);
vc_write_rx_vec010(6-1 downto 4) <= inter_vc_write_in(0)(1)(0)(3)(2-1 downto 0);
inter_vc_write_out(0)(1)(0)(3)(2-1 downto 0) <= vc_write_tx_pl_vec010(6-1 downto 4);

inter_data_in(0)(1)(0)(3) <= inter_data_out(0)(1-1)(0)(1);

inter_incr_in(0)(1)(0)(3) <= inter_incr_out(0)(1-1)(0)(1);

inter_vc_write_in(0)(1)(0)(3) <= inter_vc_write_out(0)(1-1)(0)(1);

inter_data_in(0)(1)(0)(0) <= local_rx(2);
local_tx(2)	          <= inter_data_out(0)(1)(0)(0);

inter_incr_in(0)(1)(0)(0)(2-1 downto 0) <= local_incr_rx_vec(6-1 downto 4);
local_incr_tx_vec(6-1 downto 4) <= inter_incr_out(0)(1)(0)(0)(2-1 downto 0);

inter_vc_write_in(0)(1)(0)(0)(2-1 downto 0) <= local_vc_write_rx(6-1 downto 4);
local_vc_write_tx(6-1 downto 4) <= inter_vc_write_out(0)(1)(0)(0)(2-1 downto 0);

--------------------------------------------------------------------------
-- Router at x= 0 y=1 z=0
--------------------------------------------------------------------------
router_010: entity work.router_pl
  generic map (
	port_num 			=> 3,
	Xis	 			=> 0,
	Yis	 			=> 1,
	Zis	 			=> 0,
	header_incl_in_packet_length	=> true,
	port_exist			=> (0,2,3),
	vc_num_vec			=> (2, 2, 2),
	vc_num_out_vec			=> (2, 2, 2),
	vc_depth_array			=> ((2, 2), (2, 2), (2, 2)),
	vc_depth_out_array		=> ((2, 2), (2, 2), (2, 2)),
	rout_algo			=> "XYZ"
	)
  port map (
	clk 			=> clk,
	rst 			=> rst,
	data_rx	 		=> data_in010,
	vc_write_rx_vec		=> vc_write_rx_vec010,
	incr_rx_vec		=> incr_rx_vec010,
	data_tx_pl		=> data_out010,
	vc_write_tx_pl_vec	=> vc_write_tx_pl_vec010,
	incr_tx_pl_vec		=> incr_tx_pl_vec010
	);
--------------------------------------------------------------------------
-- Router port connections to adjacent routers
--------------------------------------------------------------------------
data_in110(0) <= inter_data_in(1)(1)(0)(0);
inter_data_out(1)(1)(0)(0) <= data_out110(0);
incr_rx_vec110(2-1 downto 0) <= inter_incr_in(1)(1)(0)(0)(2-1 downto 0);
inter_incr_out(1)(1)(0)(0)(2-1 downto 0) <= incr_tx_pl_vec110(2-1 downto 0);
vc_write_rx_vec110(2-1 downto 0) <= inter_vc_write_in(1)(1)(0)(0)(2-1 downto 0);
inter_vc_write_out(1)(1)(0)(0)(2-1 downto 0) <= vc_write_tx_pl_vec110(2-1 downto 0);
data_in110(1) <= inter_data_in(1)(1)(0)(3);
inter_data_out(1)(1)(0)(3) <= data_out110(1);
incr_rx_vec110(4-1 downto 2) <= inter_incr_in(1)(1)(0)(3)(2-1 downto 0);
inter_incr_out(1)(1)(0)(3)(2-1 downto 0) <= incr_tx_pl_vec110(4-1 downto 2);
vc_write_rx_vec110(4-1 downto 2) <= inter_vc_write_in(1)(1)(0)(3)(2-1 downto 0);
inter_vc_write_out(1)(1)(0)(3)(2-1 downto 0) <= vc_write_tx_pl_vec110(4-1 downto 2);

inter_data_in(1)(1)(0)(3) <= inter_data_out(1)(1-1)(0)(1);

inter_incr_in(1)(1)(0)(3) <= inter_incr_out(1)(1-1)(0)(1);

inter_vc_write_in(1)(1)(0)(3) <= inter_vc_write_out(1)(1-1)(0)(1);
data_in110(2) <= inter_data_in(1)(1)(0)(4);
inter_data_out(1)(1)(0)(4) <= data_out110(2);
incr_rx_vec110(6-1 downto 4) <= inter_incr_in(1)(1)(0)(4)(2-1 downto 0);
inter_incr_out(1)(1)(0)(4)(2-1 downto 0) <= incr_tx_pl_vec110(6-1 downto 4);
vc_write_rx_vec110(6-1 downto 4) <= inter_vc_write_in(1)(1)(0)(4)(2-1 downto 0);
inter_vc_write_out(1)(1)(0)(4)(2-1 downto 0) <= vc_write_tx_pl_vec110(6-1 downto 4);

inter_data_in(1)(1)(0)(4) <= inter_data_out(1-1)(1)(0)(2);

inter_incr_in(1)(1)(0)(4) <= inter_incr_out(1-1)(1)(0)(2);

inter_vc_write_in(1)(1)(0)(4) <= inter_vc_write_out(1-1)(1)(0)(2);

inter_data_in(1)(1)(0)(0) <= local_rx(3);
local_tx(3)	          <= inter_data_out(1)(1)(0)(0);

inter_incr_in(1)(1)(0)(0)(2-1 downto 0) <= local_incr_rx_vec(8-1 downto 6);
local_incr_tx_vec(8-1 downto 6) <= inter_incr_out(1)(1)(0)(0)(2-1 downto 0);

inter_vc_write_in(1)(1)(0)(0)(2-1 downto 0) <= local_vc_write_rx(8-1 downto 6);
local_vc_write_tx(8-1 downto 6) <= inter_vc_write_out(1)(1)(0)(0)(2-1 downto 0);

--------------------------------------------------------------------------
-- Router at x= 1 y=1 z=0
--------------------------------------------------------------------------
router_110: entity work.router_pl
  generic map (
	port_num 			=> 3,
	Xis	 			=> 1,
	Yis	 			=> 1,
	Zis	 			=> 0,
	header_incl_in_packet_length	=> true,
	port_exist			=> (0,3,4),
	vc_num_vec			=> (2, 2, 2),
	vc_num_out_vec			=> (2, 2, 2),
	vc_depth_array			=> ((2, 2), (2, 2), (2, 2)),
	vc_depth_out_array		=> ((2, 2), (2, 2), (2, 2)),
	rout_algo			=> "XYZ"
	)
  port map (
	clk 			=> clk,
	rst 			=> rst,
	data_rx	 		=> data_in110,
	vc_write_rx_vec		=> vc_write_rx_vec110,
	incr_rx_vec		=> incr_rx_vec110,
	data_tx_pl		=> data_out110,
	vc_write_tx_pl_vec	=> vc_write_tx_pl_vec110,
	incr_tx_pl_vec		=> incr_tx_pl_vec110
	);
--------------------------------------------------------------------------
-- Router port connections to adjacent routers
--------------------------------------------------------------------------
end architecture structural;